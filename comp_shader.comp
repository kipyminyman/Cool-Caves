#version 430

uniform float thresh;

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image3D img_input;
layout(rgba32f, binding = 1) uniform image3D img_output;

void main() {
    ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);
    vec4 pixel = vec4(0, 0, 0, 0);

    // config number //
    int tmp = 0;
    if (imageLoad(img_input, pixel_coords).x >= thresh) { tmp += 1; }
    if (imageLoad(img_input, pixel_coords + ivec3(0, 0, 1)).x >= thresh) { tmp += (1 << 1); }
    if (imageLoad(img_input, pixel_coords + ivec3(0, 1, 1)).x >= thresh) { tmp += (1 << 2); }
    if (imageLoad(img_input, pixel_coords + ivec3(0, 1, 0)).x >= thresh) { tmp += (1 << 3); }
    if (imageLoad(img_input, pixel_coords + ivec3(1, 0, 0)).x >= thresh) { tmp += (1 << 4); }
    if (imageLoad(img_input, pixel_coords + ivec3(1, 0, 1)).x >= thresh) { tmp += (1 << 5); }
    if (imageLoad(img_input, pixel_coords + ivec3(1, 1, 1)).x >= thresh) { tmp += (1 << 6); }
    if (imageLoad(img_input, pixel_coords + ivec3(1, 1, 0)).x >= thresh) { tmp += (1 << 7); }

    pixel.x = float(tmp);

    // output or something...
    imageStore(img_output, pixel_coords, pixel);
}
